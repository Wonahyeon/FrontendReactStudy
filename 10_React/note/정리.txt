#0523
[리액트 시작]
- 새로운 package 만들었을 때(또는 협업 시)
  git pull -> npm install
* npm 사용 시 경로 중요 (package.json 파일 있어야 됨)
- npm start

[JSX 문법]
- 태그 열었으면 무조건 닫아야 함
- 여러 개 태그 사용 시 하나의 부모 태그 필요
  <></> : React.Fragment
- JSX내 자바스크립트 변수나 함수 사용 시
  {} 필요



#0524
[JSX 문법]
- 인라인 스타일 객체 형태로 작성
- 속성명 카멜 케이스 사용
  예: backgroundColor
- css 파일 연결
  import '파일 경로';
- class값 설정 시 class="" 아닌
  className=""
- JSX내 주석 사용 방법 ctrl + /
  {/* 이런 형태 */}

[컴포넌트1]
- 파일명 파스칼 케이스 사용
  예: Book
- 리액트 '함수' 컴포넌트
- 리액트 엘리먼트를 반환
- 완성 후 내보내기!!! -> 다른 곳에서 사용하려면 꼭!
  export default 컴포넌트명;
- 화면 띄우기
  index.js에 컴포넌트 렌더링

[엘리먼트]
- DOM 엘리먼트 가상 표현
- 불변성 = 변하지 않는 성질
  한 번 생성된 엘리먼트 변하지 않음
  생성 후 자식이나 속성 바꿀 수 없음
- 변경하는 것이 아니라 새로운 엘리먼트 생성
- 새로운 엘리먼트를 기존 엘리먼트와 바꿈
- UI 업데이트
  새로운 엘리먼트 생성 후 root.render()로 전달

[컴포넌트2]
- 모든 페이지가 컴포넌트로 구성, 하나의 컴포넌트는 또 다른 여러 컴포넌트들의 조합으로 만들 수 있음
- 반복되는 부분을 컴포넌트로 만들어 재사용
  => 재사용 가능하도록 얼마나 컴포넌트를 잘 쪼개고 잘 조립하는지가 중요
- 자바스크립트 함수와 유사
  props를 입력으로 받아서 그에 맞는 React 엘리먼트를 생성하여 반환

[props]
- 
- 키-값 쌍의 형태로 컴포넌트에 전달 가능
- 정수, 변수, 다른 컴포넌트 등 값을 넣을 때 {}
  문자열은 {} 생략 가능
- props로 다른 컴포넌트를 넘기는 것도 가능
- 다른 컴포넌트 넘기면서 props 넣을 수 있음
  예: header={<Header title="타이틀"/>}

[컴포넌트 만들기]
- 클래스 컴포넌트
  React 초기 버전 주로 사용
  사용 불편 -> 함수 컴포넌트 + 훅(Hook)으로 대체
- 함수 컴포넌트(권장)
  자바스크립트 함수 형태로 된 컴포넌트
  코드 간결 사용 용이
- 컴포넌트명 항상 대문자로 시작!!
  React는 소문자로 시작하는 컴포넌트를 HTML DOM Tag로 인식